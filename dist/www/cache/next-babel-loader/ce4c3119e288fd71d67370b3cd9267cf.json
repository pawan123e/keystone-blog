{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\web Developer Projects\\\\keystone_blog\\\\app\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      allPosts {\\n        title\\n        id\\n        body\\n        posted\\n        slug\\n        image {\\n          publicUrl\\n        }\\n        author {\\n          name\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from 'next/link';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { jsx, Global, css } from '@emotion/core';\nimport { format, parseISO } from 'date-fns';\nimport Layout from '../templates/layout';\nimport Header from '../components/header';\nimport { withApollo } from '../lib/apollo';\nimport profile from './images/profile.png';\n/** @jsx jsx */\n\nvar Post = function Post(_ref) {\n  var post = _ref.post;\n  return jsx(Link, {\n    href: \"/post/[slug]?slug=\".concat(post.slug),\n    as: \"/post/\".concat(post.slug),\n    passHref: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, jsx(\"a\", {\n    css: {\n      display: 'block',\n      background: 'white',\n      boxShadow: '0px 10px 20px hsla(200, 20%, 20%, 0.20)',\n      marginBottom: 32,\n      cursor: 'pointer',\n      borderRadius: 6,\n      overflow: 'hidden'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, post.image ? jsx(\"img\", {\n    src: post.image.publicUrl,\n    css: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }\n  }) : null, jsx(\"article\", {\n    css: {\n      padding: '1em'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, jsx(\"h3\", {\n    css: {\n      marginTop: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, post.title), jsx(\"section\", {\n    dangerouslySetInnerHTML: {\n      __html: post.body\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), jsx(\"div\", {\n    css: {\n      marginTop: '1em',\n      borderTop: '1px solid hsl(200, 20%, 80%)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, jsx(\"p\", {\n    css: {\n      fontSize: '0.8em',\n      marginBottom: 0,\n      color: 'hsl(200, 20%, 50%)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Posted by \", post.author ? post.author.name : 'someone', \" on\", ' ', format(parseISO(post.posted), 'dd/MM/yyyy'))))));\n};\n\n_c = Post;\nexport default _c3 = withApollo(_c2 = _s(function () {\n  _s();\n\n  var _useQuery = useQuery(gql(_templateObject())),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  return jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), jsx(\"img\", {\n    src: profile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), jsx(\"section\", {\n    className: \"latest\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Latest Posts\"), loading ? jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"loading...\") : error ? jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Error!\") : jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, data.allPosts.length ? data.allPosts.map(function (post) {\n    return jsx(Post, {\n      post: post,\n      key: post.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 41\n      }\n    });\n  }) : jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"No posts to display\"))));\n}, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n}));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"%default%$withApollo\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["E:/web Developer Projects/keystone_blog/app/pages/index.js"],"names":["Link","gql","useQuery","jsx","Global","css","format","parseISO","Layout","Header","withApollo","profile","Post","post","slug","display","background","boxShadow","marginBottom","cursor","borderRadius","overflow","image","publicUrl","width","padding","marginTop","title","__html","body","borderTop","fontSize","color","author","name","posted","data","loading","error","allPosts","length","map","id"],"mappings":"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","sourcesContent":["import Link from 'next/link';\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { jsx, Global, css } from '@emotion/core';\nimport { format, parseISO } from 'date-fns';\n\nimport Layout from '../templates/layout';\nimport Header from '../components/header';\nimport { withApollo } from '../lib/apollo';\nimport profile from './images/profile.png';\n\n/** @jsx jsx */\n\nconst Post = ({ post }) => {\n  return (\n    <Link href={`/post/[slug]?slug=${post.slug}`} as={`/post/${post.slug}`} passHref>\n      <a\n        css={{\n          display: 'block',\n          background: 'white',\n          boxShadow: '0px 10px 20px hsla(200, 20%, 20%, 0.20)',\n          marginBottom: 32,\n          cursor: 'pointer',\n          borderRadius: 6,\n          overflow: 'hidden',\n        }}\n      >\n        {post.image ? <img src={post.image.publicUrl} css={{ width: '100%' }} /> : null}\n        <article css={{ padding: '1em' }}>\n          <h3 css={{ marginTop: 0 }}>{post.title}</h3>\n          <section dangerouslySetInnerHTML={{ __html: post.body }} />\n          <div css={{ marginTop: '1em', borderTop: '1px solid hsl(200, 20%, 80%)' }}>\n            <p css={{ fontSize: '0.8em', marginBottom: 0, color: 'hsl(200, 20%, 50%)' }}>\n              Posted by {post.author ? post.author.name : 'someone'} on{' '}\n              {format(parseISO(post.posted), 'dd/MM/yyyy')}\n            </p>\n          </div>\n        </article>\n      </a>\n    </Link>\n  );\n};\n\nexport default withApollo(() => {\n  const { data, loading, error } = useQuery(gql`\n    query {\n      allPosts {\n        title\n        id\n        body\n        posted\n        slug\n        image {\n          publicUrl\n        }\n        author {\n          name\n        }\n      }\n    }\n  `);\n\n  return (\n    <Layout>\n      <Header />\n      <img src = {profile}/>\n\n      <section className='latest'>\n        <h2>Latest Posts</h2>\n        {loading ? (\n          <p>loading...</p>\n        ) : error ? (\n          <p>Error!</p>\n        ) : (\n          <div>\n            {data.allPosts.length ? (\n              data.allPosts.map(post => <Post post={post} key={post.id} />)\n            ) : (\n              <p>No posts to display</p>\n            )}\n          </div>\n        )}\n      </section>\n    </Layout>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}